--- APP --- 

 // const [modifytask, setModifytask] = useState();
  // const [modifycomplete, setModifycomplete] = useState();

  // const updateTask = (id) => {
  //   axios
  //     .put("http://localhost:8000/todo/" + id)
  //     .then(() => {
  //       console.log("update successful");
  //     })
  //     .catch((e) => console.log(e));
  // };

  // const completeTask = (id) => {
  //   axios
  //     .put("http://localhost:8000/todo/" + id)
  //     .then(() => {
  //       console.log("update successful");
  //     })
  //     .catch((e) => console.log(e));
  // };


  /* 

 // const deleteTask = (id) => {
  //   setTasks(
  //     axios
  //       .delete("http://localhost:8000/todo/" + id)
  //       .then(() => {
  //         console.log("delete successful");
  //       })
  //       .catch((e) => console.log(e))
  //   );
  // };
  //  = > fonctionne pas du tout

 // axios
    //   .get("http://localhost:8000/todo")
    //   .then(({ data }) => {
    //     console.log("DATA FROM DB : " + data);
    //     setTasks(data);
    //   })
    //   .catch((e) => console.log(e));
    // => NON

useEffect(()=>{
  fetch("http://localhost:8000/todo")
  .then(res=>{
    return res.json()
  })
  .then(data =>{
    setTasks(data);
  })
},[])


fetchTaskes()
 const fetchTasks = async () => {
    try {
      const res = await axios.get("http://localhost:8000/todo");
      console.log("api res => ", res);
      setTasks(res.data);
    } catch (err) {
      console.error(err);
    }
  };

*/


--- TODOLIST --- 

 {/* // <button onClick={() => updateTask(task.id)}>complete</button>  */}

//  <Todo
//               task = {task.task}
//               complete ={task.complete}
//               id = {task.id}

//               tasks={tasks}
//               deleteTask={deleteTask}
//               updateTask={updateTask}
//             /> 


//       <li
//               className={task.complete ? " post-it strike" : "post-it"}
//               key={task.id}
//               style={{
//                 listStyleType: "none",
//               }}
//             >
              
//             compo pr chaque tache, dans state, un boolean qui dit si on mofi et ne fonction afficher 
//             rendu contiontionel dans return ternary 
//             moyen de detecter si on a cliquier si oui affciher un input, sinon para
//             garder en memoire dans un state si modfifier ou non
//             qd fini de modifier, repasser Ã  un paragraphe 
//             mettre un on click sur compo entier ? 

//             <p>{task.task}</p>
//             <button onClick={() => updateTask(task.id)}>modify</button>
//           // <button onClick={() => updateTask(task.id)}>complete</button> 
//             <button onClick={() => deleteTask(task.id)}>delete</button>
//       </li>

//   const handleDelete = 
//   async (task.id)=> {
//     await axios.delete("http://localhost:8000/todo/{task.id}");
//   }

//   axios. delete("http://localhost:8000/todo/{task.id}")
//   .then(()=> console.log("delete successful"))
//   .catch((e)=> console.log(e))

// Sans request :
//  const deleteContact = (email) => {
//     setContacts(contacts.filter((contact) => contact.email !== email));
//   };

//   deleteTask(task.id){
//     axios
//       .delete("http://localhost:8000/todo/{task.id}")
//       .then(()=> console.log("delete successful"))
//       .catch((e)=> console.log(e))
//   } 
 


